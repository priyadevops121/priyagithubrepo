{
	"name": "FixedLenEmpTxtFile2CsvDF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_EmpFixlen",
						"type": "DatasetReference"
					},
					"name": "FixedLenEmpTxtFile2CsvDF"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "EmpfixedlenTxt2csv2output",
						"type": "DatasetReference"
					},
					"name": "EmpfixedlenTxt2csv2output"
				},
				{
					"dataset": {
						"referenceName": "SqlServerTable3",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> FixedLenEmpTxtFile2CsvDF",
				"FixedLenEmpTxtFile2CsvDF derive(EmpId = substring(Column_1, 1, 4),",
				"          EmpName = substring(Column_1, 5, 10),",
				"          State = substring(Column_1, 15 , 2),",
				"          Contact = substring(Column_1, 17, 10)) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          EmpId,",
				"          EmpName,",
				"          State,",
				"          Contact",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string",
				"     ),",
				"     partitionFileNames:['EmpfixedlenTxt2csv2output.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> EmpfixedlenTxt2csv2output",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}