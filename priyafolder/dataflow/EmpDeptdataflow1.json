{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empcsvdataset",
						"type": "DatasetReference"
					},
					"name": "EmpDataFlow"
				},
				{
					"dataset": {
						"referenceName": "Deptcsvdataset",
						"type": "DatasetReference"
					},
					"name": "DeptDataFlow"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "EmpDeptDataflowOutputdataset",
						"type": "DatasetReference"
					},
					"name": "EmpDeptDataoutput"
				}
			],
			"transformations": [
				{
					"name": "EmpDeptdata"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string,",
				"          Column_7 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpDataFlow",
				"source(output(",
				"          department_id as string,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DeptDataFlow",
				"EmpDataFlow, DeptDataFlow join(Column_7 == department_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> EmpDeptdata",
				"EmpDeptdata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          No as string,",
				"          Age as string,",
				"          Gender as string,",
				"          Salary as string,",
				"          {Monthly Expenditure} as string,",
				"          Occupation as string,",
				"          {Healthy Lifestyle} as string",
				"     ),",
				"     partitionFileNames:['EmpDeptoutputdata'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          No = Column_1,",
				"          Age = Column_2,",
				"          Gender = Column_3,",
				"          Salary = department,",
				"          Occupation = department_id",
				"     ),",
				"     partitionBy('hash', 1)) ~> EmpDeptDataoutput"
			]
		}
	}
}